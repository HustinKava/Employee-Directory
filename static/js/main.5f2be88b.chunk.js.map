{"version":3,"sources":["component/Title/Title.js","component/Search/Search.js","component/TableHead/TableHead.js","component/TableBody/TableBody.js","component/Main/Main.js","App.js","index.js"],"names":["Title","className","Search","handleSearchChange","type","id","placeholder","aria-label","onChange","style","margin","TableHead","sortByName","sortByPhone","sortByEmail","sortByDob","scope","onClick","formatDate","date","dateArray","split","year","join","TableBody","props","src","image","alt","name","phone","email","dob","Main","fetchRandomUser","a","fetch","then","results","json","data","user","setState","error","state","order","sort","b","first","filteredUsers","cell","event","filter","startsWith","target","value","charAt","toUpperCase","slice","this","length","map","picture","large","last","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f2be88b.chunk.js","sourcesContent":["import React from 'react';\nimport './Title.css';\n\nfunction Title() {\n    return(\n        <div className='title-section'>\n        <h1>Employee Directory</h1>\n        <p>Click on carrots to filter by heading or use the search box to narrow your results.</p>\n        </div>\n    )\n};\n\nexport default Title;","import React from 'react';\nimport './Search.css';\n\nconst Search = ({handleSearchChange}) => {\n    return ( \n      <div className='container search-container'>\n      <div className=\"form-outline\">\n      <input type=\"search\" id=\"form1\" className=\"form-control\" placeholder=\"Search\"\n       aria-label=\"Search\" onChange={handleSearchChange} />\n      </div>\n      </div>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport './TableHead.css';\n\nconst style = {\n    margin: '10px 5px'\n}\n\n// Destructuring the functions we passed from Main.js\nfunction TableHead ({sortByName, sortByPhone, sortByEmail, sortByDob}) {\n\n\n\n    return (\n\n            <thead>\n                <tr>\n                <th scope=\"col\">Image</th>\n                {/* Calling our functions in the arrow icon span tags */}\n                <th scope=\"col\">Name<span onClick={() => sortByName()}  className=\"caret\" style={style}></span></th>\n                <th scope=\"col\">Phone<span onClick={() => sortByPhone()} className=\"caret\" style={style}></span></th>\n                <th scope=\"col\">Email<span onClick={() => sortByEmail()} className=\"caret\" style={style}></span></th>\n                <th scope=\"col\">DOB<span onClick={() => sortByDob()} className=\"caret\" style={style}></span></th>\n                </tr>\n            </thead>\n\n    )\n}\n\nexport default TableHead;","import React from 'react';\n\nfunction formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  };\n\nfunction TableBody (props) {\n    return (\n            <tr>\n            <th scope='row'><img src={props.image} alt={props.name}/></th>\n            <td>{props.name}</td>\n            <td>{props.phone}</td>\n            <td>{props.email}</td>\n            <td>{formatDate(props.dob)}</td>\n            </tr>\n    )\n};\n\nexport default TableBody;","import React, { Component } from 'react';\nimport Title from '../Title/Title';\nimport Search from '../Search/Search';\nimport TableHead from '../TableHead/TableHead';\nimport TableBody from '../TableBody/TableBody';\nimport './Main.css';\n\nclass Main extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            user: [],\n            error: null,\n            // sorting users\n            order: true,\n            // filtering users\n            filteredUsers: [],\n        };\n    };\n\n    // Once the page is loaded then make the api call\n    componentDidMount() {\n        this.fetchRandomUser();        \n    };\n\n    // Performing a get request from the api\n    fetchRandomUser = async() => {\n        try {\n            await fetch('https://randomuser.me/api/?results=20&inc=id,picture,name,cell,email,dob')\n            .then(results => {\n                return results.json();\n            })\n            .then(data => {\n                // Storing the data response in the user variable\n                let user = data.results\n\n                // Setting the user variable to the user state\n                this.setState({user: user});\n            });\n        }\n        catch(error) {\n            this.setState({ error: error});\n        };\n    };\n\n    // Sorting alphabetically by name\n    sortByName = () => {\n        this.setState({\n            user: this.state.order \n            ? this.state.user.sort((a,b) => {\n            if(a.name.first < b.name.first) return -1;\n            if(a.name.first > b.name.first) return 1;\n            return 0;\n        })\n            : this.state.user.sort((a,b) => {\n                if(a.name.first < b.name.first) return 1;\n                if(a.name.first > b.name.first) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            filteredUsers: this.state.order \n            ? this.state.filteredUsers.sort((a,b) => {\n            if(a.name.first < b.name.first) return -1;\n            if(a.name.first > b.name.first) return 1;\n            return 0;\n        })\n            : this.state.filteredUsers.sort((a,b) => {\n                if(a.name.first < b.name.first) return 1;\n                if(a.name.first > b.name.first) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            order: !this.state.order\n        })\n    };\n\n    // Sorting alphabetically by Phone\n    sortByPhone = () => {\n        this.setState({\n            user: this.state.order \n            ? this.state.user.sort((a,b) => {\n            if(a.cell < b.cell) return -1;\n            if(a.cell > b.cell) return 1;\n            return 0;\n        })\n            : this.state.user.sort((a,b) => {\n                if(a.cell < b.cell) return 1;\n                if(a.cell > b.cell) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            filteredUsers: this.state.order \n            ? this.state.filteredUsers.sort((a,b) => {\n            if(a.cell < b.cell) return -1;\n            if(a.cell > b.cell) return 1;\n            return 0;\n        })\n            : this.state.filteredUsers.sort((a,b) => {\n                if(a.cell < b.cell) return 1;\n                if(a.cell > b.cell) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            order: !this.state.order\n        })\n    };\n\n    // Sorting alphabetically by Email\n    sortByEmail = () => {\n        this.setState({\n            user: this.state.order \n            ? this.state.user.sort((a,b) => {\n            if(a.email < b.email) return -1;\n            if(a.email > b.email) return 1;\n            return 0;\n        })\n            : this.state.user.sort((a,b) => {\n                if(a.email < b.email) return 1;\n                if(a.email > b.email) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            filteredUsers: this.state.order \n            ? this.state.filteredUsers.sort((a,b) => {\n            if(a.email < b.email) return -1;\n            if(a.email > b.email) return 1;\n            return 0;\n        })\n            : this.state.filteredUsers.sort((a,b) => {\n                if(a.email < b.email) return 1;\n                if(a.email > b.email) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            order: !this.state.order\n        })\n    };\n\n    // Sorting alphabetically by Dob\n    sortByDob = () => {\n        this.setState({\n            user: this.state.order \n            ? this.state.user.sort((a,b) => {\n            if(a.dob.date < b.dob.date) return -1;\n            if(a.dob.date > b.dob.date) return 1;\n            return 0;\n        })\n            : this.state.user.sort((a,b) => {\n                if(a.dob.date < b.dob.date) return 1;\n                if(a.dob.date > b.dob.date) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            filteredUsers: this.state.order \n            ? this.state.filteredUsers.sort((a,b) => {\n            if(a.dob.date < b.dob.date) return -1;\n            if(a.dob.date > b.dob.date) return 1;\n            return 0;\n        })\n            : this.state.filteredUsers.sort((a,b) => {\n                if(a.dob.date < b.dob.date) return 1;\n                if(a.dob.date > b.dob.date) return -1;\n                return 0;\n            })\n        })\n        this.setState({\n            order: !this.state.order\n        })\n    };\n    \n    // Creating a function that will handle when a user types into the search bar\n    handleSearchChange = event => {\n\n        // Filtering our search results each time a character is entered into the search bar\n        // We target the characters typed with event.target.value\n        // The user names first character is always capitalized so we compensate for that by converting index 0 to uppercase\n        // Then after we have accounted for the first character we concatenate with even.target.value again and use the splice method from index 1\n        // This will then account for anything typed after the first character\n        const filteredUsers = this.state.user.filter(user => user.name.first.startsWith(event.target.value.charAt(0).toUpperCase() + event.target.value.slice(1)));\n        \n        // The filteredUsers state gets set to the users that are stored in the filteredUsers variable\n        this.setState({\n            filteredUsers: filteredUsers\n        });\n    };\n\n    // Rendering the page\n    render() {\n\n            \n        return (\n            <div>\n                <Title/>\n                <Search\n                handleSearchChange={this.handleSearchChange}\n                />\n                <div className='container'>\n                    <table className=\"table table-striped\">\n                        <TableHead\n                        sortByName={this.sortByName}\n                        sortByPhone={this.sortByPhone}\n                        sortByEmail={this.sortByEmail}\n                        sortByDob={this.sortByDob}\n                        />\n                        <tbody>\n                        {/* Checking if the filtered users arry is empty\n                        if it is then return the users state */}\n                        {this.state.filteredUsers.length === 0 ? \n                         this.state.user.map(user => {                         \n                            return <TableBody\n                            key={user.name.first + ' ' + user.name.last}\n                            image={user.picture.large}\n                            name={user.name.first + ' ' + user.name.last}\n                            phone={user.cell}\n                            email={user.email}\n                            dob={user.dob.date}\n                            />\n                        })\n                        :\n                        // If the filtered users array is not empty then \n                        // Return the filtered users array\n                        this.state.filteredUsers.map(user => {                       \n                            return <TableBody\n                                key={user.name.first + ' ' + user.name.last}\n                                image={user.picture.large}\n                                name={user.name.first + ' ' + user.name.last}\n                                phone={user.cell}\n                                email={user.email}\n                                dob={user.dob.date}\n                                />                            \n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Main;","import Main from './component/Main/Main';\n\nfunction App() {\n  return (\n      <Main/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );"],"sourceRoot":""}